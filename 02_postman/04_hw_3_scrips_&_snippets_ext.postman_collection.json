{
	"info": {
		"_postman_id": "16a61c52-9165-4047-ac18-250ab46d4a3d",
		"name": "04_hw_3_scrips_&_snippets_ext",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19376206"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// Логин и получение и отправка токена в окружение",
							"let resp = pm.response.json();",
							"let token = resp.token;",
							"console.log(\"TOKEN = \" + token);",
							"pm.environment.set(\"token\", token);",
							"//Приходящий токен необходимо передать во все остальные запросы"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "timur.krep@gmail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "123456",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5006/login",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"//Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//Проверка структуры json в ответе",
							"let schema = {",
							"    \"type\": \"object\",",
							"  \"properties\": {",
							"    \"person\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"u_age\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"u_name\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"string\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            },",
							"            {",
							"              \"type\": \"integer\"",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"u_age\",",
							"        \"u_name\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"qa_salary_after_12_months\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"qa_salary_after_6_months\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"start_qa_salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"person\",",
							"    \"qa_salary_after_12_months\",",
							"    \"qa_salary_after_6_months\",",
							"    \"start_qa_salary\"",
							"  ]",
							"}",
							"",
							"pm.test (\"Schema json is valid\", function() {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"//В ответе указаны коэффициенты умножения salary, напишите тесты по проверке правильности результата перемножения на коэффициент",
							"let resp = pm.response.json();",
							"let req = JSON.parse(request.data);",
							"pm.test (\"Сoefficient - 2\", function() {",
							"   pm.expect(resp.qa_salary_after_6_months).to.eql(req.salary * 2);",
							"});",
							"",
							"pm.test (\"Сoefficient - 2.9\", function() {",
							"   pm.expect(resp.qa_salary_after_12_months).to.eql(req.salary * 2.9);",
							"});",
							"",
							"pm.test (\"Сoefficient - 4\", function() {",
							"   pm.expect(resp.person.u_salary_1_5_year).to.eql(req.salary * 4);",
							"});",
							"",
							"//Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса http://162.55.220.72:5005/get_test_user",
							"let salary1_5 = resp.person.u_salary_1_5_year;",
							"pm.environment.set(\"salary1.5\", salary1_5);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\": 24,\n    \"salary\": 1500,\n    \"name\": \"Timur\",\n    \"auth_token\": \"{{token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://162.55.220.72:5006/user_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе",
							"let schema = {",
							"    \"type\": \"object\",",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"type\": \"integer\"",
							"        },",
							"        \"name\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"salary\": {",
							"            \"type\": \"array\",",
							"            \"items\": [",
							"                {",
							"                    \"type\": \"integer\"",
							"                },",
							"                {",
							"                    \"type\": \"string\"",
							"                },",
							"                {",
							"                    \"type\": \"string\"",
							"                }",
							"            ]",
							"        }",
							"    },",
							"    \"required\": [",
							"        \"age\",",
							"        \"name\",",
							"        \"salary\"",
							"    ]",
							"}",
							"",
							"pm.test(\"Schema json is valid\", function () {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// В ответе указаны коэффициенты умножения salary напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"let resp = pm.response.json();",
							"pm.test(\"Сoefficient salary - 2\", function () {",
							"    pm.expect(+resp.salary[1]).to.eql(request.data.salary * 2);",
							"});",
							"",
							"pm.test(\"Сoefficient salary - 3\", function () {",
							"    pm.expect(+resp.salary[2]).to.eql(request.data.salary * 3);",
							"});",
							"",
							"// проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							"pm.test(\"Comparison of salaries\", function () {",
							"pm.expect(+resp.salary[2] > +resp.salary[0], resp.salary[1],).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5006/new_data",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе",
							"let schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"daily_food\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"daily_sleep\": {",
							"      \"type\": \"number\"",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"daily_food\",",
							"    \"daily_sleep\",",
							"    \"name\"",
							"  ]",
							"}",
							"",
							"pm.test (\"Schema json is valid\", function() {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.",
							"let resp = pm.response.json();",
							"pm.test(\"Check daily food\", function () {",
							"    pm.expect(resp.daily_food).to.eql(request.data.weight * 0.012);",
							"});",
							"",
							"pm.test(\"Check daily sleep\", function () {",
							"    pm.expect(resp.daily_sleep).to.eql(request.data.weight * 2.5);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "65",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5006/test_pet_info",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// Статус код 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Проверка структуры json в ответе",
							"let schema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"age\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"family\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"children\": {",
							"          \"type\": \"array\",",
							"          \"items\": [",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            },",
							"            {",
							"              \"type\": \"array\",",
							"              \"items\": [",
							"                {",
							"                  \"type\": \"string\"",
							"                },",
							"                {",
							"                  \"type\": \"integer\"",
							"                }",
							"              ]",
							"            }",
							"          ]",
							"        },",
							"        \"u_salary_1_5_year\": {",
							"          \"type\": \"integer\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"children\",",
							"        \"u_salary_1_5_year\"",
							"      ]",
							"    },",
							"    \"name\": {",
							"      \"type\": \"string\"",
							"    },",
							"    \"salary\": {",
							"      \"type\": \"integer\"",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"age\",",
							"    \"family\",",
							"    \"name\",",
							"    \"salary\"",
							"  ]",
							"}",
							"",
							"pm.test (\"Schema json is valid\", function() {",
							"    pm.response.to.have.jsonSchema(schema);",
							"});",
							"",
							"// Проверить, что занчение поля name = значению переменной name из окружения",
							"let resp = pm.response.json();",
							"pm.test (\"Value name = value name from env\", function() {",
							"pm.expect(resp.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"",
							"// Проверить, что занчение поля age в ответе соответсвует отправленному в запросе значению поля age",
							"pm.test (\"Resp age = req age\", function() {",
							"pm.expect(resp.age).to.eql(request.data.age);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "24",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary1.5}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5006/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"// Взять любой объект из присланного списка, используя js random.",
							"// В объекте взять Cur_ID и передать через окружение в следующий запрос.",
							"",
							"pm.test (\"Random currency\", function() {",
							"let resp_cur = pm.response.json();",
							"let random = Math.floor(Math.random() * resp_cur.length);",
							"console.log(random, resp_cur[random]);",
							"pm.environment.set(\"Cur_ID\", random);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5006/currency",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5006",
					"path": [
						"currency"
					]
				}
			},
			"response": []
		}
	]
}