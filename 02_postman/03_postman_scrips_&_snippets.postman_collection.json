{
	"info": {
		"_postman_id": "1243836e-5116-4bc0-a792-e4af653b3c1a",
		"name": "03_postman_scrips_&_snippets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19376206"
	},
	"item": [
		{
			"name": "login_token_take_script",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"var respToken = jsonData.token;\r",
							"pm.environment.set(\"token\", respToken) // стандартный сниппет для сохранения токена\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "Timur",
							"type": "text"
						},
						{
							"key": "password",
							"value": "Rasfill23",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/login",
					"host": [
						"{{url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "login_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  \r",
							"var jsonData = pm.response.json(); // даем пм считать ответ сервера в формате json\r",
							"var ageCheck = parseInt(jsonData.age); // объявляем переменную с параметром age и вынимаем значение по ключу, переведя из строки в число\r",
							"    pm.test(\"your test age > 29\", function () {\r",
							"     pm.expect(ageCheck).to.be.above(28) // непосредственно тест\r",
							"  })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "30",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Timur",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/get_test_user?age=30&salary=1500&name=Timur&auth_token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_test_user"
					],
					"query": [
						{
							"key": "age",
							"value": "30"
						},
						{
							"key": "salary",
							"value": "1500"
						},
						{
							"key": "name",
							"value": "Timur"
						},
						{
							"key": "auth_token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "First_body_matches_string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/first",
					"host": [
						"{{url}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "status200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/get_method?name=Timur&age=24",
					"host": [
						"{{url}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Timur"
						},
						{
							"key": "age",
							"value": "24"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3_tetss",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"age check\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(24);\r",
							"});\r",
							"\r",
							"pm.test(\"name check\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Timur\");\r",
							"});\r",
							"\r",
							"let respName = jsonData.name;\r",
							"console.log(respName); // не забывать про проверки через консоль.лог\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_1?name=Timur&age=24&weight=65",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Timur"
						},
						{
							"key": "age",
							"value": "24"
						},
						{
							"key": "weight",
							"value": "65"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "arr_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.salary[0]).to.eql(1500);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/object_info_4?name=Timur&age=24&salary=1500",
					"host": [
						"{{url}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Timur"
						},
						{
							"key": "age",
							"value": "24"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		}
	]
}