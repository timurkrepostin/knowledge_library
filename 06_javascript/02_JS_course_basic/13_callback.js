
// Функции высшего порядка

// В JS функции расцениваются как объекты
// Функции могут быть переданы в качестве параметров в другии функции, могут быть пресвоены переменные
// Поэтому функции в JS называются функциями первого класса

// Пример, как не рекомендуется дополнять объект функции

function foo() {
    console.log('Hello word');
}
foo();
foo.field = 'Denis';
console.log(foo.field); // таким образом доказываем, что функция объект, который можно дополнить

// Функции высшего порядка - это функции, которые принимают в качестве параметров другие функции или возвращают функции

// Аналог метода map для массивов.
// Map - возвращает новый массив, состоящий из результатов вызов функции callback 

// Задача: получить новый массив, дающий на выходе количество символов каждого элемента

const arr = ['Denis', 'Ivan', 'Maks', 'Olga']; 
let newArr = [];
for (let i = 0; i < arr.length; i++) {
    newArr.push(arr[i].length);
}
console.log(newArr);

// Плюс сделать вывод всего массива в верхнем регистре

let newArr2 = [];
for (let i = 0; i < arr.length; i++) {
    newArr2.push(arr[i].toUpperCase());
}
console.log(newArr2);

// Если объединить это в функцию, то придется постоянно дублировать код, что плохо для качественного кода

// Функция, дающая на выходе количество символов каждого элемента массива
function mapArray(arr, fn) {
    const res = []
}